############################################################################
#                _      _               _     ___     _   
#         __   _(_)_ __| |_ _   _  __ _| |   / _ \___| |_ 
#         \ \ / / | '__| __| | | |/ _` | |  / /_)/ _ \ __|
#          \ V /| | |  | |_| |_| | (_| | | / ___/  __/ |_ 
#           \_/ |_|_|   \__|\__,_|\__,_|_| \/    \___|\__|
#   ˚☽                                     
#            ☆                          ☆                 ☆            ☆
#               Virtual Star comes from a galaxy far, far away...                  
############################################################################


#                              Written by Sarah Bass
#                Check out my other games for Android, Fitbit, and more
#                           https://github.com/SarahBass



################
#####IMPORTS####
################
import ssd1306
import machine
import time
import uos
import random
import gc
import utime
import thumby
import os
import math
from machine import ADC

##############################################
###########MACHINE BITMAP DATA################
##############################################
# BITMAP: width: 72, height: 40
Logo = bytearray([0,252,4,4,4,36,228,228,132,4,4,228,100,4,196,228,196,4,228,36,100,196,36,100,228,228,100,36,4,164,228,4,228,164,4,196,100,36,36,100,196,4,228,196,4,4,4,4,4,36,228,52,148,244,100,4,20,244,180,20,4,20,52,244,244,52,20,4,4,4,252,0,
           0,255,0,0,128,0,128,3,143,28,156,63,159,0,7,15,7,0,15,2,6,13,0,0,31,207,224,48,16,7,15,72,15,7,0,135,79,130,2,15,71,0,7,175,204,236,200,160,0,0,7,15,1,0,0,0,0,15,13,9,0,0,0,15,7,0,0,0,0,0,255,0,
           0,255,0,0,202,65,74,64,74,65,74,64,74,81,74,64,74,81,74,64,106,81,106,192,0,209,3,22,20,32,144,136,36,66,65,32,0,32,65,66,36,136,176,2,65,35,1,34,160,0,192,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,192,0,255,0,
           0,255,0,0,255,128,191,133,135,128,191,160,128,191,137,191,128,135,188,135,128,175,128,255,0,2,4,136,80,32,0,0,128,128,0,1,1,1,0,0,0,0,0,0,32,80,168,4,170,16,255,128,158,169,150,128,156,138,156,128,140,146,146,128,158,132,154,128,255,0,255,0,
           0,63,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,53,32,32,32,32,48,32,49,41,39,33,32,38,40,32,48,48,32,32,32,46,32,32,32,34,32,42,49,42,32,42,49,42,32,42,49,42,32,42,49,42,32,42,32,63,0])

# 72x40 for 8 frames
splashScreenFrames = bytearray
# 72x40 for 6 frames
introFrames = bytearray([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,128,128,0,0,0,0,0,0,0,128,148,22,146,138,206,32,168,6,128,0,136,0,0,32,0,68,16,56,16,68,0,0,136,0,160,0,168,16,32,0,42,16,42,0,40,16,168,0,40,16,168,0,200,32,32,64,64,36,32,192,0,144,64,0,32,64,0,132,32,0,144,64,144,32,64,68,0,0,0,0,0,1,2,64,107,243,107,32,11,17,10,0,186,57,184,0,170,17,170,0,186,57,186,0,42,1,2,0,224,224,224,8,20,212,136,128,136,212,20,104,96,0,0,0,0,1,2,4,164,18,161,0,0,8,144,0,128,4,136,1,2,4,21,18,19,1,8,67,0,0,0,0,0,0,0,0,0,132,192,224,193,0,0,128,0,25,60,28,10,0,10,0,10,17,10,0,24,16,32,0,32,0,160,0,160,0,161,1,129,0,128,0,128,0,160,0,160,16,168,0,186,57,186,0,170,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,160,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,1,2,0,10,1,10,0,2,1,2,0,2,1,10,0,10,1,2,0,0,0,0,0,2,1,2,0,11,19,11,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,22,178,154,238,32,168,128,176,0,168,20,168,0,160,68,176,56,16,68,128,16,170,144,168,0,168,0,160,0,160,0,160,0,160,16,160,0,160,16,160,0,192,224,224,192,192,228,224,192,0,144,0,0,0,0,4,0,32,128,80,176,160,32,192,0,0,0,0,0,0,0,0,0,34,49,122,48,19,131,3,0,6,1,10,128,58,57,186,0,170,16,170,0,43,19,11,0,2,129,130,32,80,80,32,0,32,81,80,32,128,129,2,0,0,1,3,7,167,3,161,0,160,16,160,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,16,160,0,128,1,129,0,129,7,6,6,6,3,129,0,129,1,0,0,128,0,160,64,168,17,170,0,186,57,186,0,170,17,170,0,170,144,168,0,168,16,168,0,160,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,16,0,16,16,16,16,16,0,40,16,40,0,1,0,0,2,1,2,0,10,1,10,0,10,17,10,0,10,17,42,0,10,1,10,1,42,17,10,0,2,1,10,0,2,1,2,0,43,19,43,0,42,17,42,0,58,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,147,139,238,32,168,4,184,0,128,136,128,16,0,68,16,56,144,64,128,0,136,144,168,0,168,16,168,0,168,16,160,0,160,16,160,0,160,0,128,64,64,128,128,64,64,128,16,0,0,128,64,0,32,128,40,16,192,80,208,200,0,32,132,0,0,0,0,0,0,0,2,0,42,49,122,48,18,129,2,0,11,3,43,128,186,57,186,0,170,17,170,0,43,19,11,0,10,1,2,0,130,129,2,0,2,129,130,0,2,0,1,2,4,8,136,4,130,1,128,0,128,8,144,0,132,0,38,36,36,5,5,9,12,6,128,0,16,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,136,0,0,0,28,28,28,1,2,10,17,16,17,10,2,1,12,12,0,0,128,0,162,0,186,57,186,0,170,17,170,0,186,57,186,0,168,16,168,0,170,17,170,0,42,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,1,10,0,10,16,8,0,8,16,8,0,10,0,2,0,2,1,2,0,18,1,18,16,16,16,16,0,40,17,40,0,2,1,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,146,139,238,32,40,4,184,0,0,8,128,0,0,68,16,56,16,68,128,0,136,0,160,0,160,16,168,0,168,16,168,0,168,16,168,0,168,16,128,64,64,128,128,64,64,128,16,0,0,128,68,0,32,64,8,128,32,0,144,64,144,32,68,64,0,0,0,0,0,0,0,0,42,49,122,48,18,145,170,0,186,56,58,0,170,16,168,0,184,57,186,0,10,1,2,0,2,1,0,64,160,161,64,0,64,160,160,64,0,0,1,2,4,8,40,4,162,17,160,8,184,56,184,0,128,4,8,1,2,4,149,18,147,1,8,67,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,149,168,0,170,145,170,0,128,0,0,0,0,1,1,0,0,2,4,4,4,2,0,0,1,1,0,0,128,0,160,0,186,57,186,0,170,17,42,0,42,16,42,0,42,17,10,0,58,57,186,0,168,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,3,3,11,0,10,17,10,0,10,17,10,0,10,17,10,0,10,17,10,0,10,1,10,0,10,17,10,0,10,1,2,0,0,0,0,0,0,16,0,16,16,16,16,16,0,41,18,40,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,144,128,192,0,128,0,128,0,0,8,64,0,0,68,16,56,16,68,0,0,8,0,0,0,128,16,168,0,168,16,160,0,160,0,160,0,160,0,128,64,64,128,128,64,64,128,16,0,0,128,68,0,32,128,40,16,192,80,208,200,0,32,132,0,0,0,0,0,0,0,0,0,32,49,122,48,18,129,2,0,58,57,58,128,168,0,168,0,184,56,184,0,42,1,2,0,2,129,128,32,80,81,32,0,32,81,80,32,130,128,1,2,4,8,168,4,130,1,128,0,128,136,144,0,132,0,38,36,36,5,5,9,12,6,128,0,144,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,10,17,170,0,168,0,128,0,0,1,1,0,0,1,2,2,2,1,0,0,129,1,128,0,128,16,234,224,234,17,170,0,171,19,171,0,170,17,170,0,168,144,168,0,170,17,170,0,2,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,10,0,10,1,10,0,10,17,10,0,10,1,10,0,10,1,10,0,2,1,10,0,10,1,10,0,8,1,0,0,0,1,0,0,3,3,3,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,176,152,232,32,168,0,176,0,160,0,32,128,128,128,16,56,16,68,128,16,160,0,160,0,128,0,160,0,32,16,32,0,32,16,160,0,160,0,128,64,64,128,128,64,64,132,0,0,0,144,0,0,0,0,4,0,32,128,80,176,160,32,192,0,0,0,0,0,0,0,0,0,34,49,122,48,18,129,2,0,6,1,8,131,43,3,168,0,186,57,186,0,10,1,2,0,0,64,64,16,32,32,144,0,144,32,32,16,64,64,1,2,4,8,136,4,162,1,160,0,128,8,128,1,130,0,144,38,4,1,4,18,17,8,0,128,0,0,0,0,0,0,0,0,8,0,128,0,0,0,0,64,0,0,12,30,14,132,0,0,42,17,170,0,170,16,168,0,160,0,160,0,128,0,129,1,129,0,160,0,160,0,160,0,160,16,170,64,250,57,186,0,170,17,170,0,42,17,170,0,170,144,168,0,168,16,168,0,160,0,0,0,0,0,0,0,2,3,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,2,17,42,0,42,17,42,0,42,17,42,0,10,17,42,0,42,17,8,1,10,17,10,0,10,1,2,0,0,0,0,0,3,3,3,0,2,1,2,0,0,0,0,0])
# Make a sprite object using bytearray (a path to binary file from 'IMPORT SPRITE' is also valid)
thumbySprite = thumby.Sprite(72, 40, Logo)
Spr = thumby.Sprite(72, 40, splashScreenFrames) 
Spr1 = thumby.Sprite(72, 40, introFrames) 
# Increase this to make the flutter animation change frames faster
thumby.display.setFPS(4) 

##############################################

#Global Variables-------------------------#
pageNumber=1                              #
userInput=11                              #
                                          #
randnum=random.randint(2, 1299)           #
randnumber=random.randint(5, 120)         #
smallrandom=random.randint(0,10)          #
palindromenum=[5,6,7,9,11,12,14,15,       #
               17,18,19,21,28,35,36,      #
               37,42,63,73,74,84,85,      #
               94,101,111,119,126,131,    #
               185,202,303,404,409]       #
                                          #
gameLibrary = ["Roman Numeral",           #
               "Palindrome Pal",          #
               "Binary Beats",            #
               "Witch's Hex",             #
               "Power Ball",]             #
selector = 0                              #
abutton = 0             
#-----------------------------------------#

###########################################################################################
###################MINI GAME LOGIC ########################################################
###########################################################################################
def intToRoman(num: int) -> str:
    M = ["", "M", "MM", "MMM"]
    C = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"]
    X = ["", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"]
    I = ["", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"]
    return M[num // 1000] + C[(num % 1000) // 100] + X[(num % 100) // 10] + I[num % 10]

def isPalindrome(self, x):
    if x > 0:
        temp = x
        rev_int_elements = []
        while temp > 0:
            digit = temp % 10
            rev_int_elements.append(digit)
            temp = temp // 10
        org_int_elements = rev_int_elements[::-1]
        return rev_int_elements == org_int_elements
    elif x == 0:
        return True
    else:
        return False

class Game:
    def __init__(self,name, answer, text, userAnswer):
        self.name = name
        self.answer = answer
        self.text = text
        self.userAnswer= userAnswer
game1 = Game("Roman Numeral", randnum, intToRoman(randnum),userInput)    
game2 = Game("Palindrome Pal", isPalindrome(isPalindrome,101), random.choice(palindromenum),
             isPalindrome(isPalindrome,(userInput*(random.choice(palindromenum))))) 
game3 = Game("Binary Beats", randnumber,bin(randnumber)[2:], userInput)
game4 = Game("Witch's Hex",randnumber,hex(randnumber)[2:],userInput)
game5 = Game("Power Ball",pow(2,smallrandom),smallrandom,userInput)


###########################################################################################
################### BUILD STAR CHARACTER ##################################################
###########################################################################################
class Star:
    def __init__(self, food, toy, hyg, sad, sick, happy, angry, edu, level ):
        self.food = food
        self.toy = toy
        self.hyg = hyg
        self.sad = sad
        self.sick = sick
        self.happy = happy  
        self.angry = angry  
        self.edu = edu
        self.level= level 
        
starpet = Star(0,0,0,0,0,5,0,0,0)

###########################################################################################
################### MANAGE BACKGROUND CHANGES #############################################
###########################################################################################

def BackgroundSwitch(level,sad, sick, angry,happy)-> str:
    if pageNumber == 1:
        if level == 10:
            return "gameover"
        elif level == range(7,9):
            if sick > 0:
                return "starsick"
            elif angry >0:
                return "starangry"
            elif sad > 0:
                return "starsad"
            else :
                if happy > 8:
                    return "superhappystar"
                elif happy == range(7,8):
                    return "happystar"
                elif happy == range(5,6):
                    return "averagestar"
                else:
                    return "sadstar"
        elif level ==range(3,6):
            if sick > 0:
                return "nebulasick"
            elif angry >0:
                return "nebulaangry"
            elif sad > 0:
                return "nebulasad"
            else :
                if happy > 8:
                    return "superhappynebula"
                elif happy == range(7,8):
                    return "happynebula"
                elif happy == range(5,6):
                    return "averagenebula"
                else:
                    return "sadnebula"
        else :
            if sick > 0:
                return "gassick"
            elif angry >0:
                return "gasangry"
            elif sad > 0:
                return "gassad"
            else :
                if happy > 8:
                    return "superhappygas"
                elif happy == range(7,8):
                    return "happygas"
                elif happy == range(5,6):
                    return "averagegas"
                else:
                    return "sadgas"
    elif pageNumber == 2:
        return random.choice(gameLibrary)
    elif pageNumber == 3:
        if selector == 1:
            return "funfood"
        elif selector == 2:
            return "meteor"
        elif selector == 3:
            return "shootingstar"
        else:
            return "Food"
    elif pageNumber == 4:
        if selector == 1:
            return "animal"
        elif selector == 2:
            return "spaceship"
        elif selector == 3:
            return "satelite"
        else:
            return "toy"
    elif pageNumber == 5:
        if selector == 1:
            return "bath"
        elif selector == 2:
            return "brush"
        elif selector == 3:
            return "medicine"
        else:
            return "hyg"
    else:
        return "startscreen"

pagetype =(BackgroundSwitch(starpet.level,
                            starpet.sad,
                            starpet.sick,
                            starpet.angry,
                            starpet.happy))         


#-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=--=x=
#                        START OF GAME                           # 
#-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=-=x=--=x=
 while(True):
    if pagetype == "startscreen":
        thumby.display.fill(1) 
        thumby.display.drawSprite(Spr1)
        Spr1.setFrame(Spr1.currentFrame+1)
        thumby.display.update()
    else:     
        thumby.display.fill(1) 
        thumby.display.drawSprite(Spr)
        Spr.setFrame(Spr.currentFrame+1)
        thumby.display.update()
        

#Rules: 
#Win a game -> +1 Happy, +1 Education
#Lose a game -> +1 Sad 
#Food -> + 1 Level, -1 Happy, -1 Sad
#Hygene -> +1 Happy, -1 sick
#Toy -> +1 Happy -1 Angry
#2 toys in a row ->  +1 sad
#2 hygenes in a row -> +1 Angry
#2 food in a row -> +1 Sick
#Hygene heals sick
#Toys heal anger
#Food heals sad
